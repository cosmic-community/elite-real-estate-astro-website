---
// src/components/PropertyCard.astro
import type { Property } from '../types'
import { formatPrice, formatSquareFeet, getPropertyType, getPropertyStatus } from '../types'

export interface Props {
  property: Property
}

const { property } = Astro.props
const primaryImage = property.metadata.gallery?.[0]
const hasAgent = property.metadata.listing_agent
const propertyType = getPropertyType(property.metadata.property_type)
const propertyStatus = getPropertyStatus(property.metadata.property_status)
---

<div class="bg-white rounded-lg shadow-card hover:shadow-card-hover transition-shadow duration-200 overflow-hidden group">
  <!-- Property Image -->
  <div class="relative aspect-[4/3] overflow-hidden">
    {primaryImage ? (
      <img 
        src={`${primaryImage.imgix_url}?w=600&h=450&fit=crop&auto=format,compress`}
        alt={property.title}
        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
        width="400"
        height="300"
      />
    ) : (
      <div class="w-full h-full bg-secondary-200 flex items-center justify-center">
        <svg class="w-16 h-16 text-secondary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z" />
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 9h6v6H9z" />
        </svg>
      </div>
    )}
    
    <!-- Status Badge -->
    <div class="absolute top-3 left-3 z-20">
      <span class={`px-2 py-1 text-xs font-medium rounded ${
        propertyStatus === 'For Sale' ? 'bg-green-100 text-green-800' :
        propertyStatus === 'For Rent' ? 'bg-blue-100 text-blue-800' :
        propertyStatus === 'Sold' ? 'bg-red-100 text-red-800' :
        'bg-secondary-100 text-secondary-800'
      }`}>
        {propertyStatus}
      </span>
    </div>

    <!-- Save Button -->
    <div class="absolute top-3 right-3 z-20">
      <button class="p-2 bg-white/90 backdrop-blur-sm rounded-full shadow-sm hover:bg-white transition-colors" onclick="event.stopPropagation()">
        <svg class="w-5 h-5 text-secondary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
        </svg>
      </button>
    </div>

    <!-- Gallery Count -->
    {property.metadata.gallery && property.metadata.gallery.length > 1 && (
      <div class="absolute bottom-3 right-3 z-20">
        <span class="bg-black/70 text-white px-2 py-1 text-xs rounded flex items-center">
          <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
          </svg>
          {property.metadata.gallery.length}
        </span>
      </div>
    )}
  </div>

  <!-- Property Details -->
  <div class="p-4 relative z-10">
    <!-- Price -->
    <div class="text-2xl font-bold text-secondary-900 mb-2">
      {formatPrice(property.metadata.price)}
    </div>

    <!-- Property Stats -->
    <div class="flex items-center space-x-4 mb-3 text-sm text-secondary-600">
      <div class="flex items-center">
        <span class="font-semibold text-secondary-900">{property.metadata.bedrooms}</span>
        <span class="ml-1">bed{property.metadata.bedrooms !== 1 ? 's' : ''}</span>
      </div>
      <div class="flex items-center">
        <span class="font-semibold text-secondary-900">{property.metadata.bathrooms}</span>
        <span class="ml-1">bath{property.metadata.bathrooms !== 1 ? 's' : ''}</span>
      </div>
      {property.metadata.square_feet && (
        <div class="flex items-center">
          <span class="font-semibold text-secondary-900">{formatSquareFeet(property.metadata.square_feet)}</span>
          <span class="ml-1">sq ft</span>
        </div>
      )}
    </div>

    <!-- Address -->
    <div class="flex items-start text-secondary-600 mb-3">
      <svg class="w-4 h-4 mt-0.5 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
      </svg>
      <span class="text-sm">{property.metadata.address}</span>
    </div>

    <!-- Property Type -->
    <div class="flex items-center justify-between">
      <span class="text-sm text-secondary-500 font-medium">{propertyType}</span>
      {property.metadata.features && property.metadata.features.length > 0 && (
        <span class="text-sm text-secondary-500">
          +{property.metadata.features.length} features
        </span>
      )}
    </div>

    <!-- Agent Info -->
    {hasAgent && (
      <div class="flex items-center pt-3 mt-3 border-t border-secondary-100">
        {hasAgent.metadata.photo && (
          <img 
            src={`${hasAgent.metadata.photo.imgix_url}?w=64&h=64&fit=crop&auto=format,compress`}
            alt={hasAgent.metadata.full_name}
            class="w-8 h-8 rounded-full object-cover mr-3"
            width="32"
            height="32"
          />
        )}
        <div class="flex-1">
          <p class="text-sm font-medium text-secondary-900">
            {hasAgent.metadata.full_name}
          </p>
          <p class="text-xs text-secondary-500">
            Real Estate Agent
          </p>
        </div>
      </div>
    )}
  </div>

  <!-- Hover Link -->
  <a href={`/properties/${property.slug}`} class="absolute inset-0 z-10">
    <span class="sr-only">View {property.title}</span>
  </a>
</div>