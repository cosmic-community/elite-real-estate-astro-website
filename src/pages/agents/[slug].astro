---
import Layout from '../../layouts/Layout.astro';
import PropertyCard from '../../components/PropertyCard.astro';
import { getAgent, getAgents, getPropertiesByAgent } from '../../lib/cosmic';
import type { Agent, Property } from '../../types';

export async function getStaticPaths() {
  const agents = await getAgents();
  
  return agents.map((agent: Agent) => ({
    params: { slug: agent.slug },
    props: { agent },
  }));
}

const { slug } = Astro.params;
const { agent } = Astro.props as { agent: Agent };

if (!agent) {
  return Astro.redirect('/agents');
}

const properties: Property[] = await getPropertiesByAgent(agent.id);
---

<Layout title={`${agent.title} - Elite Real Estate`}>
  <main>
    <div class="container mx-auto px-4 py-8">
      <div class="max-w-6xl mx-auto">
        <!-- Agent Profile -->
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-12">
          <div>
            <img 
              src={agent.metadata.photo?.imgix_url ? `${agent.metadata.photo.imgix_url}?w=600&h=600&fit=crop&auto=format,compress` : '/placeholder-agent.jpg'} 
              alt={agent.title}
              class="w-full h-96 object-cover rounded-lg shadow-lg"
            />
          </div>
          
          <div>
            <h1 class="text-4xl font-bold mb-4">{agent.title}</h1>
            {agent.metadata.title && (
              <p class="text-xl text-gray-600 mb-6">{agent.metadata.title}</p>
            )}
            
            {agent.metadata.bio && (
              <p class="text-gray-700 leading-relaxed mb-6">{agent.metadata.bio}</p>
            )}
            
            <div class="bg-gray-50 p-6 rounded-lg mb-6">
              <h2 class="text-2xl font-semibold mb-4">Contact Information</h2>
              <div class="space-y-2">
                {agent.metadata.phone && (
                  <div>
                    <span class="font-medium">Phone:</span>
                    <a href={`tel:${agent.metadata.phone}`} class="text-blue-600 hover:text-blue-800 ml-2">
                      {agent.metadata.phone}
                    </a>
                  </div>
                )}
                {agent.metadata.email && (
                  <div>
                    <span class="font-medium">Email:</span>
                    <a href={`mailto:${agent.metadata.email}`} class="text-blue-600 hover:text-blue-800 ml-2">
                      {agent.metadata.email}
                    </a>
                  </div>
                )}
              </div>
            </div>
            
            {agent.metadata.specialties && agent.metadata.specialties.length > 0 && (
              <div>
                <h2 class="text-2xl font-semibold mb-4">Specialties</h2>
                <div class="flex flex-wrap gap-2">
                  {agent.metadata.specialties.map((specialty: string) => (
                    <span class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm">
                      {specialty}
                    </span>
                  ))}
                </div>
              </div>
            )}
          </div>
        </div>

        <!-- Agent's Properties -->
        <div>
          <h2 class="text-3xl font-bold mb-8">Properties Listed by {agent.title}</h2>
          
          {properties.length > 0 ? (
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {properties.map((property: Property) => (
                <PropertyCard property={property} />
              ))}
            </div>
          ) : (
            <div class="text-center py-12">
              <p class="text-gray-600 text-lg">No properties currently listed by this agent.</p>
            </div>
          )}
        </div>
      </div>
    </div>
  </main>
</Layout>